#version 430 core

//Output texture
layout(binding = 0, rgba32f) uniform writeonly image2D framebuffer;

//Return a color based on the current float pos or integer pixel pos
vec4 draw(vec2 pos, ivec2 pixel)
{
  return vec4(pos.x, 0.0, pos.y, 1.0);
}

layout (local_size_x = 16, local_size_y = 8) in;
void main(void) {
  ivec2 pix = ivec2(gl_GlobalInvocationID.xy);
  ivec2 size = imageSize(framebuffer);
  if (pix.x >= size.x || pix.y >= size.y) {
    return;
  }
  vec2 pos = vec2(pix) / vec2(size.x - 1, size.y - 1);
  vec4 color = vec4(pos.x, 0.0, pos.y, 1.0);
  imageStore(framebuffer, pix, draw(pos, pix));
}
